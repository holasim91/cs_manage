{"ast":null,"code":"var _jsxFileName = \"/Users/hyuninsim/cs_manager/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Customer from \"./components/Customer\";\nimport Paper from '@material-ui/core/Paper';\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nconst theme = {\n  spacing: 4\n};\nconst p_theme = {\n  spacing: 2\n};\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n    marginTop: theme.spacing\n  },\n  table: {\n    minWidth: 1080\n  },\n  progress: {\n    margin: p_theme.spacing\n  }\n});\nexport default function App() {\n  const classes = useStyles();\n  const [customers, setCustomers] = useState([]);\n  const [completed, setCompleted] = useState(0);\n  useEffect(() => {\n    function progress() {\n      setCompleted(completed >= 100 ? 0 : completed + 1);\n    }\n\n    async function fetchData() {\n      const res = await fetch(\"/api/customers\");\n      res.json().then(res => setCustomers(res));\n    }\n\n    ;\n    setInterval(progress(), 20);\n    fetchData();\n  }, []);\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\uC0AC\\uC9C4\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uC774\\uB984\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\uC0DD\\uB144\\uC6D4\\uC77C\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\uC131\\uBCC4\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\uC9C1\\uC5C5\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, customers ? customers.map(customer => React.createElement(Customer, {\n    key: customer.id,\n    id: customer.id,\n    img: customer.img,\n    name: customer.name,\n    birth: customer.birth,\n    gender: customer.gender,\n    job: customer.job,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })) : React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: \"6\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    variant: \"determinate\",\n    value: setCompleted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/Users/hyuninsim/cs_manager/client/src/App.js"],"names":["React","useState","useEffect","Customer","Paper","Table","TableHead","TableBody","TableRow","TableCell","CircularProgress","makeStyles","theme","spacing","p_theme","useStyles","root","width","overflowX","marginTop","table","minWidth","progress","margin","App","classes","customers","setCustomers","completed","setCompleted","fetchData","res","fetch","json","then","setInterval","map","customer","id","img","name","birth","gender","job"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport \"./App.css\";\nimport Customer from \"./components/Customer\";\nimport Paper from '@material-ui/core/Paper'\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {makeStyles} from '@material-ui/core/styles'\n\n\nconst theme = {\n  spacing: 4,\n}\nconst p_theme = {\n  spacing:2\n}\n\n\nconst useStyles = makeStyles(\n  {\n  root:{\n    width:'100%',\n    overflowX: 'auto',\n    marginTop:theme.spacing\n\n  },\n  table:{\n    minWidth : 1080\n  },\n  progress:{\n    margin: p_theme.spacing,\n  }\n});\n\nexport default function App() {\n  const classes = useStyles()\n  const [customers, setCustomers] = useState([]);\n  const [completed, setCompleted] = useState(0);\n\n\n  useEffect(() => {\n    \n    function progress(){\n      setCompleted(completed >= 100? 0 : completed+1)\n    }\n  \n    async function fetchData() {\n      const res = await fetch(\"/api/customers\");\n      res.json()\n        .then(res => setCustomers(res))\n    };\n\n    \n    setInterval(progress(),20)\n    \n    fetchData();\n  },[])\n\n\n  return (\n\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>사진</TableCell>\n            <TableCell>이름</TableCell>\n            <TableCell>생년월일</TableCell>\n            <TableCell>성별</TableCell>\n            <TableCell>직업</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {customers?customers.map(customer => (\n            <Customer\n              key={customer.id}\n              id={customer.id}\n              img={customer.img}\n              name={customer.name}\n              birth={customer.birth}\n              gender={customer.gender}\n              job={customer.job}\n            />\n          )):<TableRow>\n              <TableCell colSpan='6' align='center'>\n                 <CircularProgress className={classes.progress} variant='determinate' value={setCompleted}/>\n              </TableCell>\n            </TableRow>}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}