{"ast":null,"code":"var _jsxFileName = \"/Users/hyuninsim/cs_manager/client/src/components/CustomerUpdate.js\";\nimport React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  txtFiled: {\n    autoFocus,\n    margin: \"dense\",\n    fullWidth\n  }\n}));\nexport default function CustomerUpdate(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    console.log(props.data.name);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function updateCustomer() {\n    // const url = \"/api/customers/\" + props.id;\n    // fetch(url, {\n    //   method: \"UPDATE\"\n    // }).then(props.refreshState());\n    console.log(\"UPDATE\");\n    setOpen(false);\n  }\n\n  const [form, setName] = useState(props.data);\n\n  function updateField(e) {\n    e.preventDefault();\n    console.log(e.target.id);\n    console.log(e.target.name); // setName({\n    //     ...form,\n    //     [e.target.id]: e.target.value\n    //   });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\uC218\\uC815\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\uC218\\uC815\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\uC120\\uD0DD\\uD55C \\uACE0\\uAC1D \\uC815\\uBCF4\\uB97C \\uC218\\uC815\\uD569\\uB2C8\\uB2E4.\"), React.createElement(TextField, {\n    className: classes.txtFiled,\n    id: String(props.data.id),\n    name: \"name\",\n    label: \"\\uC774\\uB984\",\n    type: \"email\",\n    defaultValue: props.data.name,\n    onChange: updateField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: updateCustomer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\uC218\\uC815\"), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uB2EB\\uAE30\"))));\n}","map":{"version":3,"sources":["/Users/hyuninsim/cs_manager/client/src/components/CustomerUpdate.js"],"names":["React","useState","Dialog","DialogContent","DialogTitle","DialogActions","Button","Typography","TextField","makeStyles","useStyles","theme","txtFiled","autoFocus","margin","fullWidth","CustomerUpdate","props","classes","open","setOpen","handleClickOpen","console","log","data","name","handleClose","updateCustomer","form","setName","updateField","e","preventDefault","target","id","String"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ;AAGRC,IAAAA,MAAM,EAAE,OAHA;AAKRC,IAAAA;AALQ;AAD2B,CAAL,CAAN,CAA5B;AAUA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMoB,eAAe,GAAG,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,IAAN,CAAWC,IAAvB;AACAL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMM,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,WAASO,cAAT,GAA0B;AACxB;AACA;AACA;AACA;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAACgB,KAAK,CAACO,IAAP,CAAhC;;AAEA,WAASM,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACE,MAAF,CAASC,EAArB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACE,MAAF,CAASR,IAArB,EAHsB,CAKtB;AACA;AACA;AACA;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEJ,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,IAAd;AAAoB,IAAA,OAAO,EAAEO,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FADF,EAEE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAER,OAAO,CAACN,QADrB;AAEE,IAAA,EAAE,EAAEuB,MAAM,CAAClB,KAAK,CAACO,IAAN,CAAWU,EAAZ,CAFZ;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAC,cAJR;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,YAAY,EAAEjB,KAAK,CAACO,IAAN,CAAWC,IAN3B;AAOE,IAAA,QAAQ,EAAEK,WAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAEH,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAED,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CAdF,CAJF,CADF;AA8BD","sourcesContent":["import React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  txtFiled: {\n    autoFocus,\n\n    margin: \"dense\",\n\n    fullWidth\n  }\n}));\n\nexport default function CustomerUpdate(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    console.log(props.data.name);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function updateCustomer() {\n    // const url = \"/api/customers/\" + props.id;\n    // fetch(url, {\n    //   method: \"UPDATE\"\n    // }).then(props.refreshState());\n    console.log(\"UPDATE\");\n    setOpen(false);\n  }\n\n  const [form, setName] = useState(props.data);\n\n  function updateField(e) {\n    e.preventDefault();\n    console.log(e.target.id);\n    console.log(e.target.name);\n\n    // setName({\n    //     ...form,\n    //     [e.target.id]: e.target.value\n    //   });\n  }\n\n  return (\n    <div>\n      <Button variant=\"contained\" onClick={handleClickOpen}>\n        수정\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle onClose={handleClose}>수정</DialogTitle>\n        <DialogContent>\n          <Typography gutterBottom>선택한 고객 정보를 수정합니다.</Typography>\n          <TextField\n            className={classes.txtFiled}\n            id={String(props.data.id)}\n            name=\"name\"\n            label=\"이름\"\n            type=\"email\"\n            defaultValue={props.data.name}\n            onChange={updateField}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" color=\"primary\" onClick={updateCustomer}>\n            수정\n          </Button>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>\n            닫기\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}