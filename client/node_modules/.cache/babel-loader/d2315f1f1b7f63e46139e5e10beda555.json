{"ast":null,"code":"var _jsxFileName = \"/Users/hyuninsim/cs_manager/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Customer from \"./components/Customer\";\nimport CustomerAdd from \"./components/CustomerAdd\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\",\n    marginTop: theme.spacing(4)\n  },\n  table: {\n    minWidth: 1080\n  }\n}));\nexport default function App() {\n  const classes = useStyles();\n  const [customers, setCustomers] = useState([]);\n  const [refresh, setRefresh] = useState({\n    file: null,\n    name: '',\n    birth: '',\n    gender: '',\n    job: '',\n    filename: ''\n  });\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\"/api/customers\");\n      res.json().then(res => setCustomers(res));\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    function refreshState() {\n      setRefresh(refresh);\n    }\n\n    refreshState();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"ID\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"\\uC0AC\\uC9C4\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\uC774\\uB984\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\uC0DD\\uB144\\uC6D4\\uC77C\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\uC131\\uBCC4\"), React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\uC9C1\\uC5C5\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, customers ? customers.map(customer => React.createElement(Customer, {\n    key: customer.id,\n    id: customer.id,\n    img: customer.image,\n    name: customer.name,\n    birth: customer.birth,\n    gender: customer.gender,\n    job: customer.job,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })) : \"Data Fetching...\"))), React.createElement(CustomerAdd, {\n    refreshState: setRefresh(refresh),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/hyuninsim/cs_manager/client/src/App.js"],"names":["React","useState","useEffect","Customer","CustomerAdd","Paper","Table","TableHead","TableBody","TableRow","TableCell","makeStyles","useStyles","theme","root","width","overflowX","marginTop","spacing","table","minWidth","App","classes","customers","setCustomers","refresh","setRefresh","file","name","birth","gender","job","filename","fetchData","res","fetch","json","then","refreshState","map","customer","id","image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Customer from \"./components/Customer\";\nimport CustomerAdd from \"./components/CustomerAdd\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\",\n    marginTop: theme.spacing(4)\n  },\n  table: {\n    minWidth: 1080\n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const [customers, setCustomers] = useState([]);\n  const [refresh , setRefresh]=useState({\n    file: null,\n    name: '',\n    birth:'',\n    gender :'',\n    job:'',\n   filename:''  })\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch(\"/api/customers\");\n      res.json().then(res => setCustomers(res));\n    }\n\n    fetchData();\n  }, []);\n  useEffect(()=>{\n    function refreshState(){\n      setRefresh(refresh)\n    }\n    refreshState()\n  },[])\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>사진</TableCell>\n              <TableCell>이름</TableCell>\n              <TableCell>생년월일</TableCell>\n              <TableCell>성별</TableCell>\n              <TableCell>직업</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {customers\n              ? customers.map(customer => (\n                  <Customer\n                    key={customer.id}\n                    id={customer.id}\n                    img={customer.image}\n                    name={customer.name}\n                    birth={customer.birth}\n                    gender={customer.gender}\n                    job={customer.job}\n                  />\n                ))\n              : \"Data Fetching...\"}\n          </TableBody>\n        </Table>\n      </Paper>\n      <CustomerAdd refreshState={setRefresh(refresh)}/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}